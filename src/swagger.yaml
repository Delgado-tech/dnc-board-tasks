openapi: '3.1.0'
info:
  title: BoardTasks
  version: '1.0.0'
servers:
  - url: http://localhost:5173/
    description: Localhost
  - url: https://dnc-board-tasks.vercel.app/
    description: Production
paths:
  /v1/products/{id}:
    get:
      tags: ["Product"]
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
    put:
      tags: ["Product"]
      parameters:
        - in: path
          name: id
          type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/product"
      responses:
        '200':
          description: OK
        '400':
          description: 'Invalid Request'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_msg"
    delete:
      tags: ["Product"]
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          description: 'Invalid Request'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_msg"
  /v1/products:
    get:
      tags: ["Product"]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
    post:
      tags: ["Product"]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
      responses:
        '201':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        '400':
          description: 'Invalid Request'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_msg"
  /v1/users:
    get:
      tags: ["User"]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/users"
    post:
      tags: ["User"]
      requestBody:
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/user"
      responses:
        '201':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        '400':
          description: 'Invalid Request'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_msg"
  /v1/users/{id}:
    delete:
      tags: ["User"]
      parameters:
        - in: path
          name: id
          type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: 'OK'
        '400':
          description: 'Invalid Request'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_msg"
components:
  schemas:
    product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
    products:
      type: array
      items:
        $ref: "#/components/schemas/product"
    user:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string   
        password:
          type: string   
    users:
      type: array
      items:
        $ref: "#/components/schemas/user"
    error_msg:
      type: object
      properties:
        message:
          type: string